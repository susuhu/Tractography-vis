#version 430

layout(local_size_x = 512) in;

layout(std430, binding = 5) buffer blocksum_buffer {
    uvec4 blocksum[];
};

uniform uint n; // the total number of blocksums

void main() {

    uint tid = gl_LocalInvocationID.x;
    int offset = 1;

    for(uint d = n>>1; d > 0; d >>= 1) {
        barrier();

        for(uint idx = tid; idx < d; idx += gl_WorkGroupSize.x) {
            uint ai = offset*(idx+idx+1)-1;
            uint bi = offset*(idx+idx+2)-1;
            blocksum[bi] += blocksum[ai];
        }
        offset += offset;
    }

    if(tid == 0)
        blocksum[n-1] = uvec4(0);

    for(uint d = 1; d < n; d <<= 1) {
        offset >>= 1;
        barrier();

        for(uint idx  = tid; idx < d; idx += gl_WorkGroupSize.x) {
            uint ai = offset*(idx+idx+1)-1;
            uint bi = offset*(idx+idx+2)-1;
            
            uvec4 t = blocksum[ai];
            blocksum[ai] = blocksum[bi];
            blocksum[bi] += t;
        }
    }
}
